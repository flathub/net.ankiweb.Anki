app-id: net.ankiweb.Anki
runtime: org.freedesktop.Platform
runtime-version: '21.08'
sdk: org.freedesktop.Sdk
add-extensions:
  org.freedesktop.Sdk.Extension.texlive:
    version: '21.08'
    directory: texlive # this is relative to /app
    no-autodownload: true
command: anki
rename-desktop-file: anki.desktop
rename-icon: anki
finish-args:
  # X11/Wayland
  - --socket=x11
  - --socket=wayland
  - --share=ipc
  - --device=dri
  # Flashcards with sound
  - --socket=pulseaudio
  # Sync
  - --share=network
  # Allow other instances to see lockfiles
  - --env=TMPDIR=/var/tmp
  # IBus support
  - --env=IBUS_USE_PORTAL=1
  # LaTeX
  - --env=PATH=/app/bin:/usr/bin:/app/texlive/bin/x86_64-linux:/app/texlive/bin/aarch64-linux

modules:
  - name: texlive
    buildsystem: simple
    build-commands:
      - install -d /app/texlive

  - name: libass
    sources:
      - type: archive
        url: https://github.com/libass/libass/releases/download/0.17.0/libass-0.17.0.tar.xz
        sha256: 971e2e1db59d440f88516dcd1187108419a370e64863f70687da599fdf66cc1a
        x-checker-data:
          type: json
          url: https://api.github.com/repos/libass/libass/releases/latest
          version-query: .tag_name
          url-query: .assets[] | select(.name=="libass-" + $version + ".tar.xz") |
            .browser_download_url
      - type: script
        commands:
          - autoreconf -fiv
        dest-filename: autogen.sh
    cleanup:
      - /include
      - /lib/pkgconfig
      - /share

  - name: mpv
    buildsystem: simple
    build-commands:
      - python3 waf configure --disable-alsa --disable-build-date --disable-manpage-build
        --prefix=/app
      - python3 waf build
      - python3 waf install
    sources:
      - type: archive
        url: https://github.com/mpv-player/mpv/archive/v0.34.1.tar.gz
        sha256: 32ded8c13b6398310fa27767378193dc1db6d78b006b70dbcbd3123a1445e746
        x-checker-data:
          type: html
          url: https://github.com/mpv-player/mpv/releases/latest
          version-pattern: href="/mpv-player/mpv/archive/refs/tags/v(\d[\d.-]*)\.tar.gz"
          url-template: https://github.com/mpv-player/mpv/archive/v$version.tar.gz
      - type: file
        url: https://waf.io/waf-2.0.24
        sha256: 93909bca823a675f9f40af7c65b24887c3a3c0efdf411ff1978ba827194bdeb0
        dest-filename: waf
        x-checker-data:
          type: html
          url: https://waf.io/
          version-pattern: href="waf-(\d[\d.-]*)\"
          url-template: https://waf.io/waf-$version
    cleanup:
      - /include
      - /lib/pkgconfig
      - /share

  - name: kerberos
    subdir: src
    config-opts:
      - --localstatedir=/var/lib
      - --sbindir=${FLATPAK_DEST}/bin
    build-commands:
      - install -Dm644 ../krb5.conf /app/etc/krb5.conf
    sources:
      - type: archive
        url: https://kerberos.org/dist/krb5/1.20/krb5-1.20.1.tar.gz
        sha256: 704aed49b19eb5a7178b34b2873620ec299db08752d6a8574f95d41879ab8851
        x-checker-data:
          type: html
          url: https://kerberos.org/dist/
          version-pattern: Kerberos V5 Release ([\d\.-]*) - current release
          url-template: https://kerberos.org/dist/krb5/$version0.$version1/krb5-$version.tar.gz
      - type: file
        path: krb5.conf
    cleanup:
      - /bin
      - /include
      - /lib/pkgconfig
      - /share

  - name: anki
    buildsystem: simple
    build-commands:
      - ./install.sh
      - install -Dm644 -t /app/share/icons/hicolor/scalable/apps anki.svg
      - install -Dm644 -t /app/share/appdata net.ankiweb.Anki.appdata.xml
      - install -Dm644 anki.xml /app/share/mime/packages/net.ankiweb.Anki.xml
    cleanup:
      - /share/pixmaps
    sources:
      - type: archive
        url: https://github.com/ankitects/anki/releases/download/2.1.55/anki-2.1.55-linux-qt5.tar.zst
        sha256: 9160f5998f31518c156567c5f42e4aa82d240bb4f88d87ebf79a602036c8469a
        x-checker-data:
          type: json
          url: https://api.github.com/repos/ankitects/anki/releases/latest
          version-query: .tag_name
          url-query: .assets[] | select(.name=="anki-" + $version + "-linux-qt5.tar.zst")
            | .browser_download_url
      - type: file
        path: anki.svg
      - type: file
        path: net.ankiweb.Anki.appdata.xml
      - type: shell
        commands:
          - sed -i '/xdg-mime/d' install.sh
          - sed -i 's/PREFIX=\/usr\/local/PREFIX=\/app/' install.sh
