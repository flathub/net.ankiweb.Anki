diff --git a/build/ninja_gen/src/node.rs b/build/ninja_gen/src/node.rs
index dde6fa1c4..61b24f67b 100644
--- a/build/ninja_gen/src/node.rs
+++ b/build/ninja_gen/src/node.rs
@@ -131,11 +131,11 @@ pub fn setup_node(
     };
     build.add_dependency("node_binary", node_binary);
 
-    match std::env::var("YARN_BINARY") {
+    match std::env::var("ANKI_YARN_BINARY") {
         Ok(path) => {
             assert!(
                 Utf8Path::new(&path).is_absolute(),
-                "YARN_BINARY must be absolute"
+                "ANKI_YARN_BINARY must be absolute"
             );
             build.add_dependency("yarn:bin", inputs![path]);
         }
diff --git a/build/runner/src/yarn.rs b/build/runner/src/yarn.rs
index 9e1bd5b58..8b145df82 100644
--- a/build/runner/src/yarn.rs
+++ b/build/runner/src/yarn.rs
@@ -18,18 +18,7 @@ pub struct YarnArgs {
 pub fn setup_yarn(args: YarnArgs) {
     link_node_modules();
 
-    if env::var("OFFLINE_BUILD").is_ok() {
-        println!("OFFLINE_BUILD is set");
-        println!("Running yarn with '--offline' and '--ignore-scripts'.");
-        run_command(
-            Command::new(&args.yarn_bin)
-                .arg("install")
-                .arg("--offline")
-                .arg("--ignore-scripts"),
-        );
-    } else {
-        run_command(Command::new(&args.yarn_bin).arg("install"));
-    }
+    run_command(Command::new(&args.yarn_bin).arg("install"));
 
     std::fs::write(args.stamp, b"").unwrap();
 }
